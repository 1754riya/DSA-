class Solution {
public:
pair<vector<int>,vector<int>>sumofsmaller(vector<int>& heights){
    int n=heights.size();
    stack<int>st;
    vector<int>nse(n,n);
    vector<int>pse(n,-1);
    for(int i=0; i<n;i++){
        while(!st.empty()&&heights[st.top()]>=heights[i]){
            st.pop();
        }
        if(!st.empty()){
            pse[i]=st.top();
        }
        st.push(i);
    }
    while (!st.empty()) st.pop();
    for(int i=n-1; i>=0;i--){
        while(!st.empty() && heights[st.top()]<heights[i]){
            st.pop();
        }
        if(!st.empty()){
            nse[i]=st.top();
        }
        st.push(i);
    }
    return {pse, nse};
}

    int largestRectangleArea(vector<int>& heights) {
        int maxi=0;
        auto [pse,nse]=sumofsmaller(heights);
        int n=heights.size();
        for(int i=0; i<n;i++){
        maxi=max(maxi,heights[i]*(nse[i]-pse[i]-1));
    }
    return maxi;}
};
