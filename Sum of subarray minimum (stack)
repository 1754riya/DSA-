class Solution {
public:
    int sumSubarrayMins(vector<int>& arr) {
            stack<int>st;
            int n=arr.size();
            vector<int>nge(n),psel(n);
            for(int i=n-1; i>=0;i--){
                while(!st.empty() && arr[st.top()]>arr[i]){
                    st.pop();
                }
                nge[i]=st.empty()?n:st.top();
                st.push(i);

            }
            
        while (!st.empty()) st.pop();

        for(int i=0; i<n;i++){
                while(!st.empty() && arr[st.top()]>arr[i]){
                    st.pop();
                }
                psel[i]=st.empty()?-1:st.top();

            
            st.push(i);
        }

           long long result = 0;
        int mod = 1e9 + 7;

        for (int i = 0; i < n; ++i) {
            long long left = i -psel[i];
            long long right = nge[i] - i;
            result = (result + arr[i] * left * right) % mod;
        }
        return (int)result;
        }
    
};
