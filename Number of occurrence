class Solution {
  public:
   int firstOccurence(vector<int>&arr, int target){
       int n=arr.size();
        int low=0;
        int high=n-1;
        int first=-1;
        while(low<=high){
            int mid=low+(high-low)/2;
            if(arr[mid]==target){
                first=mid;
                high=mid-1;
            }
            else if(arr[mid]<target){
                low=mid+1;
            }
            else{
                high=mid-1;
            }
        }
        return first;
    }
     int SecondOccurence(vector<int>&arr, int target){
       int n=arr.size();
        int low=0;
        int high=n-1;
        int second=-1;
        while(low<=high){
            int mid=low+(high-low)/2;
            if(arr[mid]==target){
                second=mid;
                low=mid+1;
            }
            else if(arr[mid]<target){
                low=mid+1;
            }
            else{
                high=mid-1;
            }
        }
        return second;
     }
    int countFreq(vector<int>& arr, int target) {
        int n=arr.size();
        int first=  firstOccurence(arr,target);
        int second= SecondOccurence(arr,target);
        if (first==-1) return 0;
        return second-first+1;
    }
};
