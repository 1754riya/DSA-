class Solution {
  public:
    Node* segregate(Node* head) {
    if(!head || !head->next) return head;
   Node*ZeroH=new Node(-1);
   Node*OneH=new Node(-1);
   Node*TwoH=new Node(-1);
   
   Node*zero=ZeroH;
   Node* one=OneH;
   Node*two=TwoH;
   
   Node*temp=head;
   while(temp){
       if(temp->data==0){
           zero->next=temp;
           zero=zero->next;
       }
       else if(temp->data==1){
           one->next=temp;
           one=one->next;
       }
       else{
           two->next=temp;
           two=two->next;
       }
       temp=temp->next;
   }
   
   zero->next= OneH->next? OneH->next:TwoH->next;
   one->next=TwoH->next;
   two->next=NULL;
   
   Node*newHead=ZeroH->next;
   delete ZeroH;
   delete OneH;
   delete TwoH;
   return newHead;}
};
