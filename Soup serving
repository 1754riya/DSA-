  if (n >= 4800) return 1.0; // Optimization for large n
        int k = (n + 24) / 25;

        vector<vector<double>> memo(k + 1, vector<double>(k + 1, -1.0));

        function<double(int,int)> dfs = [&](int a, int b) -> double {
            if (a <= 0 && b <= 0) return 0.5;
            if (a <= 0) return 1.0;
            if (b <= 0) return 0.0;
            if (memo[a][b] >= 0) return memo[a][b];

            memo[a][b] = 0.25 * (
                dfs(a - 4, b) +
                dfs(a - 3, b - 1) +
                dfs(a - 2, b - 2) +
                dfs(a - 1, b - 3)
            );
            return memo[a][b];
        };

        return dfs(k, k);
    }
