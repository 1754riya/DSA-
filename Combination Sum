class Solution {
public:
    vector<vector<int>>result;
    int n;
    void solve(vector<int>& candidates, int i,vector<int>temp,int target){
        if(target==0){
            result.push_back(temp);
            return;
        }
        if (i>=n) return;
        if(candidates[i]<=target){
            temp.push_back(candidates[i]);
            solve(candidates,i,temp,target-candidates[i]);
            temp.pop_back();
        }
        solve(candidates,i+1,temp,target);

    } 
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        n=candidates.size();
        vector<int>temp;
        solve(candidates,0,temp,target);
        return result;
    }
};
