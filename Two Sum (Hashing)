##This is for bool:
class Solution {
  public:
    bool twoSum(vector<int>& arr, int target) {
      map<int, int> mpp;
        for (int i = 0; i < arr.size(); i++) {
            int complement = target - arr[i];
            if (mpp.find(complement) != mpp.end()) {
                return true;
            }
            mpp[arr[i]] = i;
        }
        return false; 
    }
};
##This is for index:
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        int n=nums.size();
        map<int,int>mpp;
       for(int i=0;i<=n;i++){
        int complement=target-nums[i];
        if(mpp.find(complement)!=mpp.end()){
            return {mpp[complement],i};
        }
        mpp[nums[i]]=i;
       }
       return {-1,-1};}
};
