class Solution {
  public:
    Node* findIntersection(Node* head1, Node* head2) {
         if (head1 == NULL || head2 == NULL) return NULL;

        Node* dummy = new Node(-1);
        Node* tail = dummy;

        unordered_set<int> seen;     // stores elements in head2
        unordered_set<int> added;    // to avoid duplicate result

        for (Node* temp = head2; temp != NULL; temp = temp->next) {
            seen.insert(temp->data);
        }

        for (Node* temp1 = head1; temp1 != NULL; temp1 = temp1->next) {
            if (seen.count(temp1->data) && !added.count(temp1->data)) {
                tail->next = new Node(temp1->data);
                tail = tail->next;
                added.insert(temp1->data);
            }
        }

        return dummy->next;
    }
        
};
