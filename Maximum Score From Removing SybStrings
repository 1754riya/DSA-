class Solution {
public:
      int removePair(string &s, char first, char second, int value) {
        stack<char> st;
        int score = 0;
        string temp = "";

        for (char ch : s) {
            if (!st.empty() && st.top() == first && ch == second) {
                st.pop();
                score += value;
            } else {
                st.push(ch);
            }
        }

        // Reconstruct the string from the stack
        while (!st.empty()) {
            temp += st.top();
            st.pop();
        }
        reverse(temp.begin(), temp.end());
        s = temp;

        return score;
    }
    int maximumGain(string s, int x, int y) {
          int total = 0;
        if (x > y) {
            total += removePair(s, 'a', 'b', x); 
            total += removePair(s, 'b', 'a', y); 
        } else {
            total += removePair(s, 'b', 'a', y); 
            total += removePair(s, 'a', 'b', x); 
        }
        return total;
    }
};
